
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> # === tool ========
> .libPaths(c(Sys.getenv('R_LIBS_1'), 
+             Sys.getenv('R_LIBS_2'),
+             Sys.getenv('R_LIBS_3')))
> .libPaths()
[1] "/home/Shared/Rlib/release-3.10-lib" "/usr/local/R/R-3.6.1/library"      
[3] "/home/fiona/tmp/R310_lib"          
> 
> suppressPackageStartupMessages({
+     library(TreeSummarizedExperiment)
+     library(dplyr)
+     library(StructFDR)
+ })
> R.Version()
$platform
[1] "x86_64-pc-linux-gnu"

$arch
[1] "x86_64"

$os
[1] "linux-gnu"

$system
[1] "x86_64, linux-gnu"

$status
[1] ""

$major
[1] "3"

$minor
[1] "6.1"

$year
[1] "2019"

$month
[1] "07"

$day
[1] "05"

$`svn rev`
[1] "76782"

$language
[1] "R"

$version.string
[1] "R version 3.6.1 (2019-07-05)"

$nickname
[1] "Action of the Toes"

> # ==== arguments from batch R=====================
> argsList <- (commandArgs(trailingOnly = TRUE))
> argsList
[1] "inRDat='output/RData/DataPrep/DataPrep.RData'"  
[2] "outRDat='output/RData/Analysis/StructFDR.RData'"
> for (i in seq_along(argsList)) {
+     if(length(argsList[[i]])>1){
+         assign(names(argsList)[i],argsList[[i]])
+     }else{eval(parse(text = argsList[[i]]))}
+ }
> 
> ## === load data from data preparation step ======
> print(inRDat)
[1] "output/RData/DataPrep/DataPrep.RData"
> load(inRDat)
> 
> # ------------------------------- functions ---------------------------------
> # wilcox.test
> test.func <- function(X, Y) {  
+     Y <- as.numeric(factor(Y))
+     obj <- apply(X, 1, function(x) {                
+         p.value <- suppressWarnings(wilcox.test(x ~ Y)$p.value)
+         e.sign <- sign(mean(x[Y == 2]) - mean(x[Y == 1]))
+         c(p.value, e.sign)          
+     })
+     return(list(p.value=obj[1, ], e.sign=obj[2, ])) 
+ }
> 
> # Define permutation function, simple group label permutation
> perm.func <- function (X, Y) {  
+     return(list(X=X, Y=sample(Y))) 
+ }
> 
> # ------------------------------- data ---------------------------------
> # structFDR takes too long to run on tree with 1E4 leaves, so we would not include
> # it 
> nam <- names(lse)
> lse <- lse[!grepl("leaf10000", x = nam)]
> 
> X <- lapply(lse, FUN = function(x) {
+     assays(x)[[1]]
+ })
> Y <- lapply(lse, FUN = function(x) {
+     colData(x)$group
+ })
> treeX <- lapply(lse, rowTree)
> 
> 
> # Call TreeFDR
> structFDR <- vector("list", length(lse))
> names(structFDR) <- names(lse)
> for (i in seq_along(lse)) {
+     message(i, " out of ", length(lse), " has been done.")
+     structFDR[[i]] <- system.time({
+         tree.fdr.obj <- TreeFDR(X[[i]], Y[[i]], treeX[[i]],
+                                 test.func, perm.func)
+     })
+ }
1 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Structure-based adjustment ...
Done!
2 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Error in gls(model = y ~ 1, correlation = corHerit(value = init.val, paras = list(p = length(y),  : 
  false convergence (8)
Hyperparameter estimation failed! Ordinary permutation-based FDR control will be used!
Done!
3 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Error in gls(model = y ~ 1, correlation = corHerit(value = init.val, paras = list(p = length(y),  : 
  false convergence (8)
Hyperparameter estimation failed! Ordinary permutation-based FDR control will be used!
Done!
4 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Error in gls(model = y ~ 1, correlation = corHerit(value = init.val, paras = list(p = length(y),  : 
  false convergence (8)
Hyperparameter estimation failed! Ordinary permutation-based FDR control will be used!
Done!
5 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Error in gls(model = y ~ 1, correlation = corHerit(value = init.val, paras = list(p = length(y),  : 
  false convergence (8)
Hyperparameter estimation failed! Ordinary permutation-based FDR control will be used!
Done!
6 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Structure-based adjustment ...
Done!
7 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Error in gls(model = y ~ 1, correlation = corHerit(value = init.val, paras = list(p = length(y),  : 
  false convergence (8)
Hyperparameter estimation failed! Ordinary permutation-based FDR control will be used!
Done!
8 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Error in gls(model = y ~ 1, correlation = corHerit(value = init.val, paras = list(p = length(y),  : 
  false convergence (8)
Hyperparameter estimation failed! Ordinary permutation-based FDR control will be used!
Done!
9 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Structure-based adjustment ...
Done!
10 out of 10 has been done.
Test on original data sets  ...
Test on permuted data sets  ...
Perform ordinary BH-based FDR control ...
Estimating hyperparameter ... 
Error in gls(model = y ~ 1, correlation = corHerit(value = init.val, paras = list(p = length(y),  : 
  false convergence (8)
Hyperparameter estimation failed! Ordinary permutation-based FDR control will be used!
Done!
> 
> # print out the running time
> structFDR
$sample50_leaf100
   user  system elapsed 
  4.140   0.108   4.251 

$sample50_leaf500
   user  system elapsed 
 40.516   0.296  40.835 

$sample50_leaf1000
   user  system elapsed 
215.344   0.864 216.333 

$sample50_leaf3000
    user   system  elapsed 
5889.008   70.520 5967.450 

$sample50_leaf6000
     user    system   elapsed 
41983.220   380.864 42424.636 

$sample250_leaf100
   user  system elapsed 
 10.488   0.056  10.553 

$sample250_leaf500
   user  system elapsed 
 75.704   1.288  77.045 

$sample250_leaf1000
   user  system elapsed 
265.940   1.452 267.548 

$sample250_leaf3000
    user   system  elapsed 
5616.992   66.048 5690.661 

$sample250_leaf6000
     user    system   elapsed 
43241.696   419.624 43724.095 

> 
> save(structFDR, file = outRDat)
> 
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS:   /usr/local/R/R-3.6.1/lib/libRblas.so
LAPACK: /usr/local/R/R-3.6.1/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C                 LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] StructFDR_1.3                  dirmult_0.1.3-4               
 [3] cluster_2.1.0                  ape_5.3                       
 [5] nlme_3.1-140                   dplyr_0.8.3                   
 [7] TreeSummarizedExperiment_1.3.1 SingleCellExperiment_1.8.0    
 [9] SummarizedExperiment_1.16.0    DelayedArray_0.12.0           
[11] BiocParallel_1.20.0            matrixStats_0.55.0            
[13] Biobase_2.46.0                 GenomicRanges_1.38.0          
[15] GenomeInfoDb_1.22.0            IRanges_2.20.0                
[17] S4Vectors_0.24.0               BiocGenerics_0.32.0           

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.2             magrittr_1.5           XVector_0.26.0        
 [4] zlibbioc_1.32.0        tidyselect_0.2.5       lattice_0.20-38       
 [7] R6_2.4.0               rlang_0.4.1            tools_3.6.1           
[10] grid_3.6.1             assertthat_0.2.1       tibble_2.1.3          
[13] crayon_1.3.4           Matrix_1.2-17          GenomeInfoDbData_1.2.2
[16] purrr_0.3.3            bitops_1.0-6           RCurl_1.95-4.12       
[19] glue_1.3.1             pillar_1.4.2           compiler_3.6.1        
[22] pkgconfig_2.0.3       
> 
> proc.time()
     user    system   elapsed 
97359.248   942.748 98441.274 
