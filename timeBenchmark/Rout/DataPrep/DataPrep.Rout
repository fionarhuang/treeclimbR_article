
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> # === tool ========
> .libPaths(c(Sys.getenv('R_LIBS_1'), 
+             Sys.getenv('R_LIBS_2'),
+             Sys.getenv('R_LIBS_3')))
> .libPaths()
[1] "/home/Shared/Rlib/release-3.10-lib" "/usr/local/R/R-3.6.1/library"      
[3] "/home/fiona/tmp/R310_lib"          
> 
> suppressPackageStartupMessages({
+     library(TreeSummarizedExperiment)
+     library(ape)
+ })
> 
> # =========== source TreeInfer package ===================
> R.Version()
$platform
[1] "x86_64-pc-linux-gnu"

$arch
[1] "x86_64"

$os
[1] "linux-gnu"

$system
[1] "x86_64, linux-gnu"

$status
[1] ""

$major
[1] "3"

$minor
[1] "6.1"

$year
[1] "2019"

$month
[1] "07"

$day
[1] "05"

$`svn rev`
[1] "76782"

$language
[1] "R"

$version.string
[1] "R version 3.6.1 (2019-07-05)"

$nickname
[1] "Action of the Toes"

> 
> # ==== arguments from batch R===================
> argsList <- (commandArgs(trailingOnly = TRUE))
> argsList
[1] "scriptP='code/Preparation/DataPrep.R'"         
[2] "outRDat='output/RData/DataPrep/DataPrep.RData'"
> for (i in seq_along(argsList)) {
+     if(length(argsList[[i]])>1){
+         assign(names(argsList)[i],argsList[[i]])
+     }else{eval(parse(text = argsList[[i]]))}
+ }
> 
> 
> ls.before <- ls()
> # ------------- Data on the leaf level ---------------------------
> # the number of leaves
> sz_tree <- c("leaf100" = 100, "leaf500" = 500, 
+              "leaf1000"= 1000, "leaf3000" = 3000,
+              "leaf6000" = 6000, "leaf10000" = 10000)
> 
> # the number of samples per group
> sz_samp <- c("sample50" = 50, "sample250" = 250)
> 
> # the library size
> sz_lib <- sz_tree*20
> 
> # proportions of entities
> set.seed(2020)
> pr <- lapply(sz_tree, FUN = function(x) {
+     # proportions are sum to 1
+     rx <- rbeta(n = x, shape1 = 2, shape2 = 5)
+     rx <- rx/sum(rx)
+     return(rx)
+ })
> 
> # trees
> trees <- lapply(sz_tree, rtree)
> 
> 
> # count matrices
> lse <- vector("list", length(sz_samp))
> names(lse) <- names(sz_samp)
> 
> for (i in seq_along(sz_samp)) {
+     samp_i <- sz_samp[i]
+     
+     # generate matrices
+     lse_i <- lapply(seq_along(sz_tree), FUN = function(j) {
+         lib_j <- sz_lib[j]
+         xx <- rmultinom(n = samp_i*2, size = lib_j, prob = pr[[j]])
+         
+         # select 30% entities, multiply their counts by 8 in the first 50% samples
+         # To test the time, this step is not mandatory 
+         # but we have it to generate some differences between groups
+         swp <- seq_len(0.3*sz_tree[j])
+         xx[swp, seq_len(samp_i)] <- xx[swp, seq_len(samp_i)] * 8
+         rownames(xx) <- trees[[j]]$tip.label
+         colnames(xx) <- paste0("sample_", seq_len(ncol(xx)))
+         
+         # generate information of samples
+         gr <- data.frame(group = rep(LETTERS[1:2], each = samp_i),
+                          row.names = colnames(xx))
+         
+         dse <- TreeSummarizedExperiment(assays = list(xx),
+                                         colData = gr,
+                                         rowTree = trees[[j]])
+         return(dse)
+     })
+     names(lse_i) <- names(sz_tree)
+     lse[[i]] <- lse_i
+ }
> 
> lse <- unlist(lse, recursive = FALSE)
> names(lse)
 [1] "sample50.leaf100"    "sample50.leaf500"    "sample50.leaf1000"  
 [4] "sample50.leaf3000"   "sample50.leaf6000"   "sample50.leaf10000" 
 [7] "sample250.leaf100"   "sample250.leaf500"   "sample250.leaf1000" 
[10] "sample250.leaf3000"  "sample250.leaf6000"  "sample250.leaf10000"
> names(lse) <- gsub(pattern = "[.]", "_", names(lse))
> names(lse)
 [1] "sample50_leaf100"    "sample50_leaf500"    "sample50_leaf1000"  
 [4] "sample50_leaf3000"   "sample50_leaf6000"   "sample50_leaf10000" 
 [7] "sample250_leaf100"   "sample250_leaf500"   "sample250_leaf1000" 
[10] "sample250_leaf3000"  "sample250_leaf6000"  "sample250_leaf10000"
> 
> Time_agg <- tse <- setNames(vector("list", length(lse)), names(lse))
> for (i in seq_along(lse)) {
+     message(i, " out of ", length(lse), " are done")
+     lse_i <- lse[[i]]
+     Time_agg[[i]] <- system.time({
+         nodes <- showNode(tree = rowTree(lse_i), only.leaf = FALSE)
+         tse[[i]] <- aggValue(x = lse_i, rowLevel = nodes, FUN = sum)
+     })
+ }
1 out of 12 are done
2 out of 12 are done
3 out of 12 are done
4 out of 12 are done
5 out of 12 are done
6 out of 12 are done
7 out of 12 are done
8 out of 12 are done
9 out of 12 are done
10 out of 12 are done
11 out of 12 are done
12 out of 12 are done
>     
> 
> 
> ls.after <- ls()
> ls.save <- setdiff(ls.after, c(ls.before, "ls.before"))
> # if the file doesn't exist or was modified earlier than the R script
> if((!file.exists(outRDat)) | (file.mtime(outRDat) < file.mtime(scriptP))){
+     save(list = ls.save, file = outRDat)
+ }
> 
> 
> 
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS:   /usr/local/R/R-3.6.1/lib/libRblas.so
LAPACK: /usr/local/R/R-3.6.1/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C                 LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] ape_5.3                        TreeSummarizedExperiment_1.3.1
 [3] SingleCellExperiment_1.8.0     SummarizedExperiment_1.16.0   
 [5] DelayedArray_0.12.0            BiocParallel_1.20.0           
 [7] matrixStats_0.55.0             Biobase_2.46.0                
 [9] GenomicRanges_1.38.0           GenomeInfoDb_1.22.0           
[11] IRanges_2.20.0                 S4Vectors_0.24.0              
[13] BiocGenerics_0.32.0           

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.2             magrittr_1.5           XVector_0.26.0        
 [4] zlibbioc_1.32.0        tidyselect_0.2.5       lattice_0.20-38       
 [7] R6_2.4.0               rlang_0.4.1            dplyr_0.8.3           
[10] tools_3.6.1            grid_3.6.1             nlme_3.1-140          
[13] assertthat_0.2.1       tibble_2.1.3           crayon_1.3.4          
[16] Matrix_1.2-17          GenomeInfoDbData_1.2.2 purrr_0.3.3           
[19] bitops_1.0-6           RCurl_1.95-4.12        glue_1.3.1            
[22] pillar_1.4.2           compiler_3.6.1         pkgconfig_2.0.3       
> 
> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
220.916   2.904 224.066 
