
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> # === tool ========
> .libPaths(c(Sys.getenv('R_LIBS_1'), 
+             Sys.getenv('R_LIBS_2'),
+             Sys.getenv('R_LIBS_3')))
> .libPaths()
[1] "/home/Shared/Rlib/release-3.10-lib" "/usr/local/R/R-3.6.1/library"      
[3] "/home/fiona/tmp/R310_lib"          
> 
> suppressPackageStartupMessages({
+     library(dplyr)
+     library(stringr)
+     library(ggplot2)
+ })
> 
> R.Version()
$platform
[1] "x86_64-pc-linux-gnu"

$arch
[1] "x86_64"

$os
[1] "linux-gnu"

$system
[1] "x86_64, linux-gnu"

$status
[1] ""

$major
[1] "3"

$minor
[1] "6.1"

$year
[1] "2019"

$month
[1] "07"

$day
[1] "05"

$`svn rev`
[1] "76782"

$language
[1] "R"

$version.string
[1] "R version 3.6.1 (2019-07-05)"

$nickname
[1] "Action of the Toes"

> # ==== arguments from batch R=====================
> argsList <- (commandArgs(trailingOnly = TRUE))
> argsList
[1] "dataPath='output/RData/DataPrep/DataPrep.RData'"
[2] "inPath='output/RData/Analysis'"                 
[3] "outPath='output/RData/figure/runTime.eps'"      
> for (i in seq_along(argsList)) {
+     if(length(argsList[[i]])>1){
+         assign(names(argsList)[i],argsList[[i]])
+     }else{eval(parse(text = argsList[[i]]))}
+ }
> 
> 
> ## === load data from data preparation step ======
> print(inPath)
[1] "output/RData/Analysis"
> print(outPath)
[1] "output/RData/figure/runTime.eps"
> 
> #main <- "/Volumes/fiona/phd/treeclimbR_article/timeBenchmark/output/RData/Analysis"
> 
> dataFiles <- file.path(inPath, list.files(path = inPath))
> sapply(dataFiles, function(file) {load(file, envir=globalenv())}) 
$`output/RData/Analysis/BH.RData`
[1] "BH"

$`output/RData/Analysis/HFDR.RData`
[1] "HFDR"

$`output/RData/Analysis/LassoGLM.RData`
[1] "Lasso"     "Lasso_all"

$`output/RData/Analysis/lefse.RData`
[1] "lefse"

$`output/RData/Analysis/miLineage.RData`
[1] "miLineage1" "miLineage2"

$`output/RData/Analysis/minP.RData`
[1] "minP"     "minP_all"

$`output/RData/Analysis/StructFDR.RData`
[1] "structFDR"

$`output/RData/Analysis/treeclimbR.RData`
[1] "treeclimbR"     "treeclimbR_all"

> 
> # function
> getDF <- function(method_time, method_name) {
+     method_time <- lapply(method_time, FUN = function(x){x["elapsed"]/3600}) 
+     scene <- strsplit(names(method_time), "_")
+     data.frame(sample = sapply(scene, FUN = function(x){x[[1]]}),
+                tree_size = sapply(scene, FUN = function(x){x[[2]]}),
+                time_min = unlist(method_time),
+                Method = method_name) %>%
+         mutate(sample = as.numeric(gsub(pattern = "sample", "", sample))*2,
+                tree_size = as.numeric(gsub(pattern = "leaf", "", tree_size)))
+ }
> 
> 
> lefse <- lefse[-grep("leaf10000", names(lefse))]
> res <- list("miLineage1" = miLineage1,
+             "miLineage2" = miLineage2,
+             "treeclimbR" = treeclimbR_all,
+             "lasso" = Lasso_all,
+             "BH" = BH,
+             "HFDR" = HFDR,
+             "minP" = minP_all,
+             "StructFDR" = structFDR,
+             "LEfSe" = lefse)
> df <- lapply(seq_along(res), FUN = function(x) {
+   getDF(method_time = res[[x]], method_name = names(res)[[x]])
+ })
> 
> DF <- do.call(rbind, df) 
> 
> 
> head(DF)
  sample tree_size    time_min     Method
1    100       100 0.002774167 miLineage1
2    100       500 0.014008056 miLineage1
3    100      1000 0.027719722 miLineage1
4    100      3000 0.082726389 miLineage1
5    100      6000 0.164657778 miLineage1
6    100     10000 0.273530556 miLineage1
> 
> # Generate the figure
> vcolor <- c("treeclimbR" = "#E41A1C", "BH" = "#377EB8",
+             "StructFDR" = "#4DAF4A", "HFDR" = "#984EA3",
+             "lasso" = "#FF7F00", "minP" = "#A65628",
+             "miLineage1" = "#999999", "miLineage2" = "#666666",
+             "LEfSe" = "#E7298A")
> 
> vline <- c("treeclimbR" = "solid", "BH" = "dashed",
+             "StructFDR" = "dashed", "HFDR" = "dashed",
+             "lasso" = "dashed", "minP" = "dashed",
+             "miLineage1" = "dashed", "miLineage2" = "dashed",
+             "LEfSe" = "dashed")
> 
> prettify <- theme_bw(base_size = 10) + theme(
+     aspect.ratio = 1,
+     #plot.margin = unit(c(0, 0, 0.2, 0), "cm"),
+     panel.grid = element_blank(),
+     panel.spacing = unit(0, "lines"),
+     axis.text = element_text(color = "black"),
+     axis.text.x = element_text(angle = 45, hjust = 1),
+     legend.key.size= unit(1.5, "mm"),
+     legend.spacing.x = unit(0.5, "mm"),
+     plot.title = element_text(hjust = 0.5),
+     legend.text = element_text(size = 7),
+     legend.position="right",
+     legend.margin = margin(0, 0, 0, 0),
+     legend.box.margin=margin(-5,-5,-10,-5),
+     strip.background = element_rect(colour = "black", fill = "gray90"),
+     strip.text.x = element_text(color = "black", size = 8),
+     strip.text.y = element_text(color = "black", size = 8))
> 
> 
> fig <- ggplot(DF, aes(x = tree_size, y = time_min, color = Method)) +
+     geom_point() +
+     geom_line(aes(linetype = Method)) +
+     facet_grid(cols = vars(sample)) +
+     scale_linetype_manual("Method", values = vline) +
+     scale_color_manual("Method", values = vcolor) +
+     scale_x_sqrt(breaks = c(100, 500, 1000, 3000, 6000, 10000)) +
+     scale_y_sqrt(breaks = c(0.5, 1, 2, 5, 10)) +
+     labs(x = "Tree sizes", y = "Time (h)") +
+     theme(axis.text = element_text(color = "black"),
+           axis.text.x = element_text(angle = 45, hjust = 1))
> 
> ggsave(outPath, fig, units = "in", width = 7, height = 3.5,
+        dpi = 300)
> 
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS:   /usr/local/R/R-3.6.1/lib/libRblas.so
LAPACK: /usr/local/R/R-3.6.1/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C                 LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] ggplot2_3.2.1 stringr_1.4.0 dplyr_0.8.3  

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.2       digest_0.6.22    withr_2.1.2      crayon_1.3.4    
 [5] assertthat_0.2.1 plyr_1.8.4       grid_3.6.1       R6_2.4.0        
 [9] gtable_0.3.0     magrittr_1.5     scales_1.0.0     pillar_1.4.2    
[13] rlang_0.4.1      stringi_1.4.3    reshape2_1.4.3   lazyeval_0.2.2  
[17] tools_3.6.1      glue_1.3.1       munsell_0.5.0    purrr_0.3.3     
[21] compiler_3.6.1   colorspace_1.4-1 pkgconfig_2.0.3  tidyselect_0.2.5
[25] tibble_2.1.3    
> 
> proc.time()
   user  system elapsed 
  1.692   0.144   2.342 
