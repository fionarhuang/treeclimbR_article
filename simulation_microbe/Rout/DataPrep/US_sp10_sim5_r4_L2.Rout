
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> # === tool ========
> .libPaths(c(Sys.getenv('R_LIBS_1'), 
+             Sys.getenv('R_LIBS_2'),
+             Sys.getenv('R_LIBS_3')))
> .libPaths()
[1] "/home/Shared/Rlib/release-3.10-lib" "/usr/local/R/R-3.6.1/library"      
[3] "/home/fiona/tmp/R310_lib"          
> 
> suppressPackageStartupMessages({
+     library(TreeSummarizedExperiment)
+     library(treeclimbR)
+ })
Warning message:
In .getGeneric(f, where, package) :
  strings not representable in native encoding will be translated to UTF-8
> 
> # =========== source TreeInfer package ===================
> R.Version()
$platform
[1] "x86_64-pc-linux-gnu"

$arch
[1] "x86_64"

$os
[1] "linux-gnu"

$system
[1] "x86_64, linux-gnu"

$status
[1] ""

$major
[1] "3"

$minor
[1] "6.1"

$year
[1] "2019"

$month
[1] "07"

$day
[1] "05"

$`svn rev`
[1] "76782"

$language
[1] "R"

$version.string
[1] "R version 3.6.1 (2019-07-05)"

$nickname
[1] "Action of the Toes"

> 
> # ==== arguments from batch R===================
> argsList <- (commandArgs(trailingOnly = TRUE))
> argsList
[1] "inRDat='/home/fiona/phd/treeclimbR_article/simulation_microbe/output/RData/parameter/US_sp10_sim5_r4_L2.RData'"
[2] "scriptP='/home/fiona/phd/treeclimbR_article/simulation_microbe/code/Preparation/DataPrep.R'"                   
[3] "parSet='/home/fiona/phd/treeclimbR_article/simulation_microbe/output/RData/parameter/US_sp10_sim5_r4_L2.RData'"
[4] "outRDat='/home/fiona/phd/treeclimbR_article/simulation_microbe/output/RData/DataPrep/US_sp10_sim5_r4_L2.RData'"
> for (i in seq_along(argsList)) {
+     if(length(argsList[[i]])>1){
+         assign(names(argsList)[i],argsList[[i]])
+     }else{eval(parse(text = argsList[[i]]))}
+ }
> 
> # ========== read in parameter value ================#
> print(inRDat)
[1] "/home/fiona/phd/treeclimbR_article/simulation_microbe/output/RData/parameter/US_sp10_sim5_r4_L2.RData"
> load(inRDat)
> 
> data("saliva_v35")
> lib <- apply(assays(saliva_v35)[[1]], 2, sum)
> ## ========== Select branches to swap ================
> (sel1 <- selNode(obj = saliva_v35, minTip = numTip1[1], 
+                  maxTip = numTip1[2],
+                  minPr = pr[1], maxPr = pr[2],  all = TRUE))
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1072    1072   1.000    alias_1072 0.01866419     15
alias_1074    1074   0.773    alias_1074 0.01717116     13
alias_1075    1075   0.635    alias_1075 0.01643136     12
alias_1093    1093   0.944    alias_1093 0.01392911     11
alias_1121    1121   0.769    alias_1121 0.01581370     13
alias_1143    1143   0.975    alias_1143 0.01460497     15
alias_1159    1159   0.909    alias_1159 0.01108118     13
alias_1265    1265   0.877    alias_1265 0.01248407     14
alias_1289    1289   0.506    alias_1289 0.01112266     14
alias_1306    1306   0.880    alias_1306 0.01169252     14
alias_1307    1307   0.408    alias_1307 0.01079371     12
alias_1308    1308   0.344    alias_1308 0.01012526     11
alias_1325    1325   0.758    alias_1325 0.01165347     14
alias_1326    1326   1.000    alias_1326 0.01102002     13
alias_1351    1351   0.828    alias_1351 0.01382217     15
alias_1352    1352   0.419    alias_1352 0.01264021     14
alias_1353    1353   0.367    alias_1353 0.01107124     13
alias_1354    1354   0.378    alias_1354 0.01001733     12
alias_1381    1381   0.879    alias_1381 0.01231415     11
alias_1415    1415   0.064    alias_1415 0.01242810     15
alias_1416    1416   0.916    alias_1416 0.01167582     14
alias_1417    1417   0.987    alias_1417 0.01003538     12
alias_1446    1446   0.914    alias_1446 0.01127858     12
alias_1447    1447   0.935    alias_1447 0.01063456     11
alias_1478    1478   0.901    alias_1478 0.01253524     12
alias_1497    1497   0.848    alias_1497 0.01121380     11
alias_1507    1507   0.863    alias_1507 0.02044275     14
alias_1508    1508   0.000    alias_1508 0.01966897     13
alias_1509    1509   0.034    alias_1509 0.01900172     12
alias_1510    1510   0.000    alias_1510 0.01069075     11
alias_1547    1547   0.480    alias_1547 0.01098529     13
alias_1568    1568   0.999    alias_1568 0.01837079     13
alias_1569    1569   0.690    alias_1569 0.01614234     11
alias_1594    1594   0.971    alias_1594 0.01416861     14
alias_1626    1626   0.004    alias_1626 0.01435396     15
alias_1627    1627   0.000    alias_1627 0.01388664     14
alias_1628    1628   0.122    alias_1628 0.01244680     12
alias_1629    1629   0.422    alias_1629 0.01203368     11
alias_1655    1655   1.000    alias_1655 0.03852052     14
alias_1656    1656   0.051    alias_1656 0.03803095     13
alias_1657    1657   0.982    alias_1657 0.03732290     12
alias_1686    1686   0.987    alias_1686 0.01119869     11
alias_1708    1708   0.000    alias_1708 0.01315444     11
alias_1778    1778   0.481    alias_1778 0.02860663     14
alias_1779    1779   0.000    alias_1779 0.02711685     13
alias_1798    1798   0.632    alias_1798 0.01661365     12
alias_1799    1799   0.847    alias_1799 0.01607177     11
alias_1875    1875   0.000    alias_1875 0.02361402     15
> 
> selR <- vector("list", nrow(sel1))
> for (i in seq_len(nrow(sel1))) {
+     cat(i, "\n")
+     pr2 <- ratio*sel1[i, "proportion"] + c(-erp, erp)
+     
+     res <- try({
+         sel2 <- selNode(obj = saliva_v35,
+                         minTip = numTip2[1], maxTip = numTip2[2],
+                         minPr = pr2[1], maxPr = pr2[2],
+                         all = TRUE, skip = sel1[i, "nodeNum"])},
+         silent = TRUE)
+     if (class(res) != "try-error") {
+         selR[[i]] <- rbind.data.frame(sel1[i, ], sel2[1, ])
+     } else {
+         selR[[i]] <- NA
+     }
+ }
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
17 
18 
19 
20 
21 
22 
23 
24 
25 
26 
27 
28 
29 
30 
31 
32 
33 
34 
35 
36 
37 
38 
39 
40 
41 
42 
43 
44 
45 
46 
47 
48 
> selR
[[1]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1072    1072   1.000    alias_1072 0.01866419     15
alias_1861    1861   0.244    alias_1861 0.07927481     38

[[2]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1074    1074   0.773    alias_1074 0.01717116     13
alias_1867    1867   0.000    alias_1867 0.07444582     32

[[3]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1075    1075   0.635    alias_1075 0.01643136     12
alias_1867    1867   0.000    alias_1867 0.07444582     32

[[4]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1093    1093   0.944    alias_1093 0.01392911     11
alias_1559    1559   0.997    alias_1559 0.04675421     35

[[5]]
[1] NA

[[6]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1143    1143   0.975    alias_1143 0.01460497     15
alias_1649    1649   0.230    alias_1649 0.05169010     24

[[7]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1159    1159   0.909    alias_1159 0.01108118     13
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[8]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1265    1265   0.877    alias_1265 0.01248407     14
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[9]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1289    1289   0.506    alias_1289 0.01112266     14
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[10]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1306    1306   0.880    alias_1306 0.01169252     14
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[11]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1307    1307   0.408    alias_1307 0.01079371     12
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[12]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1308    1308   0.344    alias_1308 0.01012526     11
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[13]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1325    1325   0.758    alias_1325 0.01165347     14
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[14]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1326    1326   1.000    alias_1326 0.01102002     13
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[15]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1351    1351   0.828    alias_1351 0.01382217     15
alias_1559    1559   0.997    alias_1559 0.04675421     35

[[16]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1352    1352   0.419    alias_1352 0.01264021     14
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[17]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1353    1353   0.367    alias_1353 0.01107124     13
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[18]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1354    1354   0.378    alias_1354 0.01001733     12
alias_1284    1284   0.791    alias_1284 0.03152624     39

[[19]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1381    1381   0.879    alias_1381 0.01231415     11
alias_1559    1559   0.997    alias_1559 0.04675421     35

[[20]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1415    1415   0.064    alias_1415 0.01242810     15
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[21]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1416    1416   0.916    alias_1416 0.01167582     14
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[22]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1417    1417   0.987    alias_1417 0.01003538     12
alias_1284    1284   0.791    alias_1284 0.03152624     39

[[23]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1446    1446   0.914    alias_1446 0.01127858     12
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[24]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1447    1447   0.935    alias_1447 0.01063456     11
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[25]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1478    1478   0.901    alias_1478 0.01253524     12
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[26]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1497    1497   0.848    alias_1497 0.01121380     11
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[27]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1507    1507   0.863    alias_1507 0.02044275     14
alias_1861    1861   0.244    alias_1861 0.07927481     38

[[28]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1508    1508   0.000    alias_1508 0.01966897     13
alias_1861    1861   0.244    alias_1861 0.07927481     38

[[29]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1509    1509   0.034    alias_1509 0.01900172     12
alias_1861    1861   0.244    alias_1861 0.07927481     38

[[30]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1510    1510   0.000    alias_1510 0.01069075     11
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[31]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1547    1547   0.480    alias_1547 0.01098529     13
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[32]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1568    1568   0.999    alias_1568 0.01837079     13
alias_1861    1861   0.244    alias_1861 0.07927481     38

[[33]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1569    1569   0.690    alias_1569 0.01614234     11
alias_1867    1867   0.000    alias_1867 0.07444582     32

[[34]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1594    1594   0.971    alias_1594 0.01416861     14
alias_1559    1559   0.997    alias_1559 0.04675421     35

[[35]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1626    1626   0.004    alias_1626 0.01435396     15
alias_1649    1649   0.230    alias_1649 0.05169010     24

[[36]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1627    1627   0.000    alias_1627 0.01388664     14
alias_1559    1559   0.997    alias_1559 0.04675421     35

[[37]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1628    1628   0.122    alias_1628 0.01244680     12
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[38]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1629    1629   0.422    alias_1629 0.01203368     11
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[39]]
[1] NA

[[40]]
[1] NA

[[41]]
[1] NA

[[42]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1686    1686   0.987    alias_1686 0.01119869     11
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[43]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1708    1708   0.000    alias_1708 0.01315444     11
alias_1375    1375   0.753    alias_1375 0.04367877     38

[[44]]
[1] NA

[[45]]
[1] NA

[[46]]
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1798    1798   0.632    alias_1798 0.01661365     12
alias_1867    1867   0.000    alias_1867 0.07444582     32

[[47]]
[1] NA

[[48]]
[1] NA

> selD <- unlist(lapply(selR, FUN = function(x){!is.na(x) && all(!is.na(x$nodeNum))}))
> if (sum(selD)) {
+     (selR <- selR[selD][[1]])
+ }else{stop("No results available")}
           nodeNum nodeLab nodeLab_alias proportion numTip
alias_1072    1072   1.000    alias_1072 0.01866419     15
alias_1861    1861   0.244    alias_1861 0.07927481     38
> 
> (sp <- selR$nodeNum)
[1] 1072 1861
> 
> 
> ## ========== simulate data ================
> if (scene %in% c("S1", "S2")) {
+     pct <- NULL
+ }
> 
> set.seed(2020)
> lse <- simData(obj = saliva_v35,
+                from.A = sp[1],
+                from.B = sp[2],
+                mu = lib,
+                nSam = nSam,
+                n = nSIM,
+                scenario = scene,
+                pct = pct)
> 
> allNode <- unique(sort(as.vector(rowTree(saliva_v35)$edge)))
> tse <- aggValue(x = lse, rowLevel = allNode, FUN = sum)
> tse
class: TreeSummarizedExperiment 
dim: 1897 20 
metadata(3): FC branch scenario
assays(5): '' '' '' '' ''
rownames(1897): alias_1 alias_2 ... alias_1896 alias_1897
rowData names(0):
colnames(20): C1_1 C1_2 ... C2_9 C2_10
colData names(1): group
reducedDimNames(0):
spikeNames(0):
altExpNames(0):
rowLinks: a LinkDataFrame (1897 rows)
rowTree: a phylo (956 leaves)
colLinks: NULL
colTree: NULL
> 
> # if the file doesn't exist or was modified earlier than the R script
> if((!file.exists(outRDat)) | (file.mtime(outRDat) < file.mtime(scriptP))){
+     save(tse, file = outRDat)
+ }
> 
> 
> 
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS:   /usr/local/R/R-3.6.1/lib/libRblas.so
LAPACK: /usr/local/R/R-3.6.1/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C                 LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] treeclimbR_0.1.1               TreeSummarizedExperiment_1.3.1
 [3] SingleCellExperiment_1.8.0     SummarizedExperiment_1.16.0   
 [5] DelayedArray_0.12.0            BiocParallel_1.20.0           
 [7] matrixStats_0.55.0             Biobase_2.46.0                
 [9] GenomicRanges_1.38.0           GenomeInfoDb_1.22.0           
[11] IRanges_2.20.0                 S4Vectors_0.24.0              
[13] BiocGenerics_0.32.0           

loaded via a namespace (and not attached):
  [1] TH.data_1.0-10              minqa_1.2.4                
  [3] colorspace_1.4-1            rjson_0.2.20               
  [5] dirmult_0.1.3-4             mclust_5.4.5               
  [7] circlize_0.4.8              corpcor_1.6.9              
  [9] XVector_0.26.0              GlobalOptions_0.1.1        
 [11] base64enc_0.1-3             clue_0.3-57                
 [13] hexbin_1.27.3               IDPmisc_1.1.19             
 [15] CytoML_1.12.0               mvtnorm_1.0-11             
 [17] codetools_0.2-16            splines_3.6.1              
 [19] R.methodsS3_1.7.1           mnormt_1.5-5               
 [21] robustbase_0.93-5           zeallot_0.1.0              
 [23] jsonlite_1.6                nloptr_1.2.1               
 [25] cluster_2.1.0               png_0.1-7                  
 [27] R.oo_1.23.0                 graph_1.64.0               
 [29] rrcov_1.4-7                 compiler_3.6.1             
 [31] backports_1.1.5             assertthat_0.2.1           
 [33] Matrix_1.2-17               lazyeval_0.2.2             
 [35] limma_3.42.0                tools_3.6.1                
 [37] ncdfFlow_2.32.0             igraph_1.2.4.1             
 [39] gtable_0.3.0                glue_1.3.1                 
 [41] GenomeInfoDbData_1.2.2      flowWorkspace_3.34.0       
 [43] reshape2_1.4.3              dplyr_0.8.3                
 [45] ggcyto_1.14.0               Rcpp_1.0.2                 
 [47] vctrs_0.2.0                 ape_5.3                    
 [49] nlme_3.1-140                stringr_1.4.0              
 [51] lme4_1.1-21                 lifecycle_0.1.0            
 [53] gtools_3.8.1                XML_3.98-1.20              
 [55] edgeR_3.28.0                DEoptimR_1.0-8             
 [57] zlibbioc_1.32.0             MASS_7.3-51.4              
 [59] zoo_1.8-6                   scales_1.0.0               
 [61] RBGL_1.62.1                 sandwich_2.5-1             
 [63] RColorBrewer_1.1-2          ComplexHeatmap_2.2.0       
 [65] yaml_2.2.0                  gridExtra_2.3              
 [67] ggplot2_3.2.1               latticeExtra_0.6-28        
 [69] stringi_1.4.3               pcaPP_1.9-73               
 [71] flowClust_3.24.0            flowCore_1.52.0            
 [73] boot_1.3-22                 shape_1.4.4                
 [75] flowViz_1.50.0              rlang_0.4.1                
 [77] pkgconfig_2.0.3             bitops_1.0-6               
 [79] fda_2.4.8                   lattice_0.20-38            
 [81] purrr_0.3.3                 ks_1.11.6                  
 [83] tidyselect_0.2.5            plyr_1.8.4                 
 [85] magrittr_1.5                R6_2.4.0                   
 [87] multcomp_1.4-10             pillar_1.4.2               
 [89] survival_2.44-1.1           RCurl_1.95-4.12            
 [91] FlowSOM_1.18.0              tibble_2.1.3               
 [93] tsne_0.1-3                  crayon_1.3.4               
 [95] KernSmooth_2.23-15          ellipse_0.4.1              
 [97] GetoptLong_0.1.7            locfit_1.5-9.1             
 [99] grid_3.6.1                  diffcyt_1.6.0              
[101] data.table_1.12.6           Rgraphviz_2.30.0           
[103] ConsensusClusterPlus_1.50.0 digest_0.6.22              
[105] tidyr_1.0.0                 R.utils_2.9.0              
[107] flowStats_3.44.0            RcppParallel_4.4.4         
[109] munsell_0.5.0               openCyto_1.24.0            
> 
> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 57.956   2.336  60.392 
